import { DEFAULT_EDITOR_SETTINGS, getEditorSettings, updateEditorSettings } from '@tldraw/editor'

// Breakpoints for portrait, keep in sync with PORTRAIT_BREAKPOINT enum below!
export let PORTRAIT_BREAKPOINTS: readonly number[] = [0, 390, 428, 468, 580, 640, 840, 1023]

// Mapping for above array -- needs to be kept in sync!
/** @public */
export enum PORTRAIT_BREAKPOINT {
	ZERO = 0,
	MOBILE_XXS = 1,
	MOBILE_XS = 2,
	MOBILE_SM = 3,
	MOBILE = 4,
	TABLET_SM = 5,
	TABLET = 6,
	DESKTOP = 7,
}

export let ADJACENT_SHAPE_MARGIN = 20

export let SHAPES_WHICH_ARROWS_CANNOT_BIND_TO: readonly string[] = ['arrow', 'group']

/* ==== BEGIN AUTO-GENERATED SETTERS ==== */
// This section is auto-generated by scripts/refresh-assets.ts.
// If you edit it manually, your changes will get overwritten.
// To regenerate this section, run `yarn refresh-assets`

const _DEFAULT_TLDRAW_SETTINGS = {
	PORTRAIT_BREAKPOINTS,
	ADJACENT_SHAPE_MARGIN,
	SHAPES_WHICH_ARROWS_CANNOT_BIND_TO,
} as const

function _getTldrawSettings() {
	return {
		PORTRAIT_BREAKPOINTS,
		ADJACENT_SHAPE_MARGIN,
		SHAPES_WHICH_ARROWS_CANNOT_BIND_TO,
	}
}

function _updateTldrawSettings(settings: Partial<ReturnType<typeof _getTldrawSettings>>) {
	if (settings.PORTRAIT_BREAKPOINTS !== undefined) {
		PORTRAIT_BREAKPOINTS = settings.PORTRAIT_BREAKPOINTS
	}
	if (settings.ADJACENT_SHAPE_MARGIN !== undefined) {
		ADJACENT_SHAPE_MARGIN = settings.ADJACENT_SHAPE_MARGIN
	}
	if (settings.SHAPES_WHICH_ARROWS_CANNOT_BIND_TO !== undefined) {
		SHAPES_WHICH_ARROWS_CANNOT_BIND_TO = settings.SHAPES_WHICH_ARROWS_CANNOT_BIND_TO
	}
}
/* ==== END AUTO-GENERATED SETTERS ==== */

/** @public */
export const DEFAULT_TLDRAW_SETTINGS = {
	..._DEFAULT_TLDRAW_SETTINGS,
	...DEFAULT_EDITOR_SETTINGS,
} as const

/** @public */
export function getTldrawSettings() {
	return {
		..._getTldrawSettings(),
		...getEditorSettings(),
	}
}

/** @public */
export function updateTldrawSettings(
	settings: Parameters<typeof _updateTldrawSettings>[0] & Parameters<typeof updateEditorSettings>[0]
) {
	_updateTldrawSettings(settings)
	updateEditorSettings(settings)
}
